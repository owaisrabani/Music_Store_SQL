-- Q.1: Who is the senior most employee based on job title?--



SELECT * FROM employee
ORDER BY levels DESC
LIMIT 1;



-- Q.2: Which countries have the most invoices?--



SELECT COUNT(*) AS 'number_of_invoices', billing_country 
FROM invoice
GROUP BY billing_country
ORDER BY number_of_invoices DESC;



-- Q.3: What are top three values of total invoice?--



SELECT billing_country, billing_city, total 
FROM invoice
ORDER BY total DESC
LIMIT 3;



-- Q.4: Which city has the best customers? We would like to throw a promotinal Music Festival in the city --
--      we made the most money. Write a queary that returns one city that has the highest sum of invoice --
--      totals. Return both the city name and sum of all invoice totals? --



SELECT ROUND(SUM(total)) AS'total-invoice', billing_city 
FROM invoice
GROUP BY billing_city 
ORDER BY 'total_invoice' DESC; 



-- Q.5: Who is the best customer? The customer who has spent the most money will be declared the best customer. --
--      Write a query that returns the person who has spent the most money? --



SELECT customer.customer_id, customer.first_name, customer.last_name, SUM(invoice.total) AS 'invoice_total' 
From customer
JOIN invoice ON customer.customer_id = invoice.customer_id
GROUP BY customer.customer_id, customer.first_name, customer.last_name
ORDER BY 'invoice-total' DESC
LIMIT 1;



-- Q.6: Write query to retuyrn the email, fist name, last name and genre of all Rock Music listeners. --
--      Return your list ordered alphabetically by email staring with 'A'? --



SELECT DISTINCT email, first_name, last_name
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
JOIN invoice_line ON invoice.invoice_id = invoice_line.invoice_id
WHERE track_id IN(
	SELECT track_id FROM track
    JOIN genre ON track.genre_id = genre.genre_id
    WHERE genre.name LIKE 'Rock'
)
ORDER BY email;



-- Q.7: Lets invite the atist who have written the most rocl music in our dataset. Write a queary that returns the Artist name --
--      and total tracl count of the top 10 rock brands? --



SELECT artist.artist_id, artist.name, COUNT(track.track_id) AS number_of_songs
FROM track
JOIN album ON album.album_id = track.album_id
JOIN artist ON artist.artist_id = album.artist_id
JOIN genre ON genre.genre_id = track.genre_id
WHERE genre.name LIKE 'Rock'
GROUP BY artist.artist_id, artist.name
ORDER BY number_of_songs DESC
LIMIT 10;



-- Q.8: Return all the track names that have a song length longer than the average song length. 
--      Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. --



SELECT name,miliseconds
FROM track
WHERE miliseconds > (
	SELECT AVG(miliseconds) AS avg_track_length
	FROM track )
ORDER BY miliseconds DESC;



-- Q9: Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent --



SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    a.name AS artist_name,
    SUM(il.unit_price * il.quantity) AS total_spent
FROM 
    customer c
    JOIN invoice i ON c.customer_id = i.customer_id
    JOIN invoice_line il ON i.invoice_id = il.invoice_id
    JOIN track t ON il.track_id = t.track_id
    JOIN album al ON t.album_id = al.album_id
    JOIN artist a ON al.artist_id = a.artist_id
GROUP BY 1, 2, 3, 4
ORDER BY 5 DESC;



-- Q.10: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
--       with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
--       the maximum number of purchases is shared return all Genres.?
   
   
   
   WITH TopGenres AS (
    SELECT
        i.billing_country AS country,
        g.name AS genre_name,
        COUNT(il.invoice_line_id) AS purchase_count,
        RANK() OVER (PARTITION BY i.billing_country ORDER BY COUNT(il.invoice_line_id) DESC) AS genre_rank
    FROM
        invoice i
        JOIN invoice_line il ON i.invoice_id = il.invoice_id
        JOIN track t ON il.track_id = t.track_id
        JOIN genre g ON t.genre_id = g.genre_id
    GROUP BY 1, 2
)

SELECT
    country,
    CASE
        WHEN COUNT(DISTINCT genre_name) = 1 THEN MAX(genre_name)
        ELSE GROUP_CONCAT(genre_name ORDER BY genre_rank)
    END AS top_genre
FROM TopGenres
GROUP BY country; 



-- Q.11: Write a query that determines the customer that has spent the most on music for each country. 
--       Write a query that returns the country along with the top customer and how much they spent. 
--     For countries where the top amount spent is shared, provide all customers who spent this amount.
  
  
  
  WITH TopCustomers AS (
    SELECT
        c.customer_id,
        c.first_name,
        c.last_name,
        i.billing_country AS country,
        SUM(il.unit_price * il.quantity) AS total_spent,
        RANK() OVER (PARTITION BY i.billing_country ORDER BY SUM(il.unit_price * il.quantity) DESC) AS customer_rank
    FROM
        customer c
        JOIN invoice i ON c.customer_id = i.customer_id
        JOIN invoice_line il ON i.invoice_id = il.invoice_id
    GROUP BY 1, 2, 3, 4
)

SELECT
    country,
    CASE
        WHEN COUNT(DISTINCT total_spent) = 1 THEN MAX(CONCAT(first_name, ' ', last_name))
        ELSE GROUP_CONCAT(CONCAT(first_name, ' ', last_name) ORDER BY customer_rank)
    END AS top_customer,
    MAX(total_spent) AS amount_spent
FROM TopCustomers
GROUP BY country;












-- Thank you --
-- owaisrabani --
-- 25-01-2024 --